{
  // Since we are now seeding the database and ensuring that there is an administrator account on creation of the
  // we application, we have to put this information in our "custom" appsettings that is loaded in the Startup.cs
  // for configuring this section of the appsettings.json to the ApplicationSetttings.cs class that we have been using
  // up until this part for the ApplicationTitle.
  "AppSettings": {
    "ApplicationTitle": "Automobile Service Center Application",
    "AdminEmail": "asc.superuser@gmail.com",
    "AdminName": "Admin",
    "AdminPassword": "P@ssw0rd",
    "EngineerEmail": "asc.superengineer@gmail.com",
    "EngineerName": "Engineer",
    "EngineerPassword": "P@ssw0rd",
    "Roles": "Admin,User,Engineer",

    "SMTPServer": "smtp.gmail.com",
    "SMTPPort": "587",
    "SMTPAccount": "autoservicenternew@gmail.com",
    "SMTPPassword": "P@ssw0rd!@#"
  },

  // We need to include our Google Identity for connecting with our Google Accounts.
  "Google": {
    "Identity": {
      "ClientId": "323605065595-vruqhonkifndcppeip90esesu71dkhn0.apps.googleusercontent.com",
      "ClientSecret": "J9uMLcHX_HdgOPyi9r97THTc"
    }
  },
  "ConnectionStrings": {
    "DefaultConnection": "UseDevelopmentStorage=true;"
  },
  // This is our AzureStorageTable configuration for the User Roles, and user accounts. This can be sensitive
  // data so usually in a production environment things like this will be encrypted and then decrypted inside of the
  // code using a SHA-256 
  "IdentityAzureTable": {
    "IdentityConfiguration": {
      "TablePrefix": "ASC",
      "StorageConnectionString": "UseDevelopmentStorage=true;",
      "LocationMode": "PrimaryOnly"
    }
  },
  "Logging": {
    "IncludeScopes": false,
    "LogLevel": {
      "Default": "Warning"
    }
  }
}
